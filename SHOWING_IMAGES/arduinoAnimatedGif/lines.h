#include "displayManager.h"

const uint8_t frame0[] PROGMEM = {
  3, 67, 8,  4, 67, 8,  5, 67, 8,  6, 67, 8,  7, 67, 8,  8, 67, 8,  9, 67, 8,  10, 67, 8,  11, 64, 8,  11, 88, 7,  12, 64, 8,  12, 88, 7,  13, 64, 8,  13, 88, 7,  14, 64, 8,  14, 88, 7,  15, 60, 15,  15, 83, 17,  16, 60, 15,  16, 83, 17,  17, 60, 15,  17, 83, 17,  18, 60, 15,  18, 83, 17,  19, 60, 15,  19, 83, 17,  20, 43, 24,  20, 72, 31,  21, 43, 24,  21, 72, 31,  22, 43, 24,  22, 72, 31,  23, 24, 67,  23, 95, 13,  24, 24, 67,  24, 95, 13,  25, 24, 67,  25, 95, 13,  26, 24, 67,  26, 95, 13,  27, 24, 67,  27, 95, 13,  28, 19, 12,  28, 40, 48,  28, 100, 3,  29, 19, 12,  29, 40, 48,  29, 100, 3,  30, 19, 12,  30, 40, 48,  30, 100, 3,  31, 19, 12,  31, 40, 48,  31, 100, 3,  32, 40, 43,  33, 40, 43,  34, 40, 43,  35, 35, 17,  35, 60, 19,  36, 35, 17,  36, 60, 19,  37, 35, 17,  37, 60, 19,  38, 35, 17,  38, 60, 19,  39, 35, 17,  39, 60, 19,  40, 35, 5,  40, 43, 4,  40, 67, 8,  41, 35, 5,  41, 43, 4,  41, 67, 8,  42, 35, 5,  42, 43, 4,  42, 67, 8,  43, 40, 12,  43, 64, 11,  44, 40, 12,  44, 64, 11,  45, 40, 12,  45, 64, 11,  46, 40, 12,  46, 64, 11,  47, 43, 4,  47, 52, 3,  47, 60, 7,  47, 72, 3,  48, 43, 4,  48, 52, 3,  48, 60, 7,  48, 72, 3,  49, 43, 4,  49, 52, 3,  49, 60, 7,  49, 72, 3,  50, 43, 4,  50, 52, 3,  50, 60, 7,  50, 72, 3,  51, 60, 15,  52, 60, 15,  53, 60, 15,  54, 60, 15,  55, 60, 15,  56, 55, 5,  57, 55, 5,  58, 55, 5,  59, 52, 3,  60, 52, 3,  61, 52, 3,  62, 52, 3,  255 // End of data marker
};
void displayFrame0() {
display.clearDisplay();
 for (uint16_t i = 0; i < sizeof(frame0); i += 3) {
uint8_t y = pgm_read_byte(&frame0[i]);
if (y == 255) {break;} // End of data marker
uint8_t startX = pgm_read_byte(&frame0[i + 1]);
uint8_t endX = pgm_read_byte(&frame0[i + 2]);
display.drawFastHLine(startX, y, endX, SSD1306_WHITE);
}
display.display(); // Send the buffer to the OLED
}

const uint8_t frame1[] PROGMEM = {
  3, 75, 8,  4, 75, 8,  5, 75, 8,  6, 75, 8,  7, 75, 8,  8, 72, 11,  9, 72, 11,  10, 72, 11,  11, 67, 12,  11, 91, 9,  12, 67, 12,  12, 91, 9,  13, 67, 12,  13, 91, 9,  14, 67, 12,  14, 91, 9,  15, 64, 15,  15, 83, 20,  16, 64, 15,  16, 83, 20,  17, 64, 15,  17, 83, 20,  18, 64, 15,  18, 83, 20,  19, 64, 15,  19, 83, 20,  20, 47, 28,  20, 79, 33,  21, 47, 28,  21, 79, 33,  22, 47, 28,  22, 79, 33,  23, 27, 68,  23, 103, 5,  24, 27, 68,  24, 103, 5,  25, 27, 68,  25, 103, 5,  26, 27, 68,  26, 103, 5,  27, 27, 68,  27, 103, 5,  28, 27, 8,  28, 43, 48,  29, 27, 8,  29, 43, 48,  30, 27, 8,  30, 43, 48,  31, 27, 8,  31, 43, 48,  32, 47, 41,  33, 47, 41,  34, 47, 41,  35, 47, 13,  35, 67, 21,  36, 47, 13,  36, 67, 21,  37, 47, 13,  37, 67, 21,  38, 47, 13,  38, 67, 21,  39, 47, 13,  39, 67, 21,  40, 43, 4,  40, 52, 3,  40, 75, 8,  41, 43, 4,  41, 52, 3,  41, 75, 8,  42, 43, 4,  42, 52, 3,  42, 75, 8,  43, 47, 13,  43, 75, 4,  43, 83, 5,  44, 47, 13,  44, 75, 4,  44, 83, 5,  45, 47, 13,  45, 75, 4,  45, 83, 5,  46, 47, 13,  46, 75, 4,  46, 83, 5,  47, 52, 23,  47, 83, 5,  48, 52, 23,  48, 83, 5,  49, 52, 23,  49, 83, 5,  50, 52, 23,  50, 83, 5,  51, 60, 7,  51, 75, 8,  52, 60, 7,  52, 75, 8,  53, 60, 7,  53, 75, 8,  54, 60, 7,  54, 75, 8,  55, 60, 7,  55, 75, 8,  255 // End of data marker
};
void displayFrame1() {
display.clearDisplay();
 for (uint16_t i = 0; i < sizeof(frame1); i += 3) {
uint8_t y = pgm_read_byte(&frame1[i]);
if (y == 255) {break;} // End of data marker
uint8_t startX = pgm_read_byte(&frame1[i + 1]);
uint8_t endX = pgm_read_byte(&frame1[i + 2]);
display.drawFastHLine(startX, y, endX, SSD1306_WHITE);
}
display.display(); // Send the buffer to the OLED
}

const uint8_t frame2[] PROGMEM = {
  3, 72, 7,  4, 72, 7,  5, 72, 7,  6, 72, 7,  7, 72, 7,  8, 67, 12,  9, 67, 12,  10, 67, 12,  11, 64, 11,  11, 91, 9,  12, 64, 11,  12, 91, 9,  13, 64, 11,  13, 91, 9,  14, 64, 11,  14, 91, 9,  15, 64, 39,  16, 64, 39,  17, 64, 39,  18, 64, 39,  19, 64, 39,  20, 47, 25,  20, 75, 33,  21, 47, 25,  21, 75, 33,  22, 47, 25,  22, 75, 33,  23, 24, 67,  23, 100, 8,  24, 24, 67,  24, 100, 8,  25, 24, 67,  25, 100, 8,  26, 24, 67,  26, 100, 8,  27, 24, 67,  27, 100, 8,  28, 24, 7,  28, 40, 48,  29, 24, 7,  29, 40, 48,  30, 24, 7,  30, 40, 48,  31, 24, 7,  31, 40, 48,  32, 43, 45,  33, 43, 45,  34, 43, 45,  35, 52, 8,  35, 67, 12,  36, 52, 8,  36, 67, 12,  37, 52, 8,  37, 67, 12,  38, 52, 8,  38, 67, 12,  39, 52, 8,  39, 67, 12,  40, 47, 5,  40, 55, 5,  40, 72, 3,  40, 79, 4,  41, 47, 5,  41, 55, 5,  41, 72, 3,  41, 79, 4,  42, 47, 5,  42, 55, 5,  42, 72, 3,  42, 79, 4,  43, 52, 12,  43, 72, 3,  43, 83, 5,  44, 52, 12,  44, 72, 3,  44, 83, 5,  45, 52, 12,  45, 72, 3,  45, 83, 5,  46, 52, 12,  46, 72, 3,  46, 83, 5,  47, 55, 17,  47, 83, 5,  48, 55, 17,  48, 83, 5,  49, 55, 17,  49, 83, 5,  50, 55, 17,  50, 83, 5,  51, 64, 3,  51, 79, 4,  52, 64, 3,  52, 79, 4,  53, 64, 3,  53, 79, 4,  54, 64, 3,  54, 79, 4,  55, 64, 3,  55, 79, 4,  255 // End of data marker
};
void displayFrame2() {
display.clearDisplay();
 for (uint16_t i = 0; i < sizeof(frame2); i += 3) {
uint8_t y = pgm_read_byte(&frame2[i]);
if (y == 255) {break;} // End of data marker
uint8_t startX = pgm_read_byte(&frame2[i + 1]);
uint8_t endX = pgm_read_byte(&frame2[i + 2]);
display.drawFastHLine(startX, y, endX, SSD1306_WHITE);
}
display.display(); // Send the buffer to the OLED
}

const uint8_t frame3[] PROGMEM = {
  3, 75, 8,  4, 75, 8,  5, 75, 8,  6, 75, 8,  7, 75, 8,  8, 72, 11,  9, 72, 11,  10, 72, 11,  11, 67, 8,  11, 95, 5,  12, 67, 8,  12, 95, 5,  13, 67, 8,  13, 95, 5,  14, 67, 8,  14, 95, 5,  15, 64, 15,  15, 88, 15,  16, 64, 15,  16, 88, 15,  17, 64, 15,  17, 88, 15,  18, 64, 15,  18, 88, 15,  19, 64, 15,  19, 88, 15,  20, 64, 11,  20, 79, 29,  21, 64, 11,  21, 79, 29,  22, 64, 11,  22, 79, 29,  23, 27, 68,  23, 100, 8,  24, 27, 68,  24, 100, 8,  25, 27, 68,  25, 100, 8,  26, 27, 68,  26, 100, 8,  27, 27, 68,  27, 100, 8,  28, 24, 16,  28, 43, 48,  29, 24, 16,  29, 43, 48,  30, 24, 16,  30, 43, 48,  31, 24, 16,  31, 43, 48,  32, 27, 4,  32, 43, 45,  33, 27, 4,  33, 43, 45,  34, 27, 4,  34, 43, 45,  35, 47, 13,  35, 67, 21,  36, 47, 13,  36, 67, 21,  37, 47, 13,  37, 67, 21,  38, 47, 13,  38, 67, 21,  39, 47, 13,  39, 67, 21,  40, 47, 8,  40, 72, 7,  40, 88, 3,  41, 47, 8,  41, 72, 7,  41, 88, 3,  42, 47, 8,  42, 72, 7,  42, 88, 3,  43, 47, 17,  43, 75, 4,  43, 91, 4,  44, 47, 17,  44, 75, 4,  44, 91, 4,  45, 47, 17,  45, 75, 4,  45, 91, 4,  46, 47, 17,  46, 75, 4,  46, 91, 4,  47, 55, 5,  47, 64, 15,  47, 88, 3,  48, 55, 5,  48, 64, 15,  48, 88, 3,  49, 55, 5,  49, 64, 15,  49, 88, 3,  50, 55, 5,  50, 64, 15,  50, 88, 3,  51, 60, 4,  51, 88, 3,  52, 60, 4,  52, 88, 3,  53, 60, 4,  53, 88, 3,  54, 60, 4,  54, 88, 3,  55, 60, 4,  55, 88, 3,  56, 64, 3,  57, 64, 3,  58, 64, 3,  255 // End of data marker
};
void displayFrame3() {
display.clearDisplay();
 for (uint16_t i = 0; i < sizeof(frame3); i += 3) {
uint8_t y = pgm_read_byte(&frame3[i]);
if (y == 255) {break;} // End of data marker
uint8_t startX = pgm_read_byte(&frame3[i + 1]);
uint8_t endX = pgm_read_byte(&frame3[i + 2]);
display.drawFastHLine(startX, y, endX, SSD1306_WHITE);
}
display.display(); // Send the buffer to the OLED
}

const uint8_t frame4[] PROGMEM = {
  3, 75, 8,  4, 75, 8,  5, 75, 8,  6, 75, 8,  7, 75, 8,  8, 72, 11,  9, 72, 11,  10, 72, 11,  11, 67, 12,  12, 67, 12,  13, 67, 12,  14, 67, 12,  15, 64, 15,  15, 83, 17,  16, 64, 15,  16, 83, 17,  17, 64, 15,  17, 83, 17,  18, 64, 15,  18, 83, 17,  19, 64, 15,  19, 83, 17,  20, 64, 8,  20, 75, 28,  21, 64, 8,  21, 75, 28,  22, 64, 8,  22, 75, 28,  23, 27, 4,  23, 43, 65,  24, 27, 4,  24, 43, 65,  25, 27, 4,  25, 43, 65,  26, 27, 4,  26, 43, 65,  27, 27, 4,  27, 43, 65,  28, 24, 64,  28, 100, 8,  29, 24, 64,  29, 100, 8,  30, 24, 64,  30, 100, 8,  31, 24, 64,  31, 100, 8,  32, 24, 7,  32, 40, 48,  33, 24, 7,  33, 40, 48,  34, 24, 7,  34, 40, 48,  35, 43, 40,  36, 43, 40,  37, 43, 40,  38, 43, 40,  39, 43, 40,  40, 47, 8,  40, 67, 21,  41, 47, 8,  41, 67, 21,  42, 47, 8,  42, 67, 21,  43, 52, 8,  43, 79, 4,  43, 88, 3,  44, 52, 8,  44, 79, 4,  44, 88, 3,  45, 52, 8,  45, 79, 4,  45, 88, 3,  46, 52, 8,  46, 79, 4,  46, 88, 3,  47, 52, 3,  47, 60, 7,  47, 72, 3,  47, 79, 4,  47, 91, 4,  48, 52, 3,  48, 60, 7,  48, 72, 3,  48, 79, 4,  48, 91, 4,  49, 52, 3,  49, 60, 7,  49, 72, 3,  49, 79, 4,  49, 91, 4,  50, 52, 3,  50, 60, 7,  50, 72, 3,  50, 79, 4,  50, 91, 4,  51, 52, 3,  51, 67, 5,  51, 75, 4,  51, 91, 4,  52, 52, 3,  52, 67, 5,  52, 75, 4,  52, 91, 4,  53, 52, 3,  53, 67, 5,  53, 75, 4,  53, 91, 4,  54, 52, 3,  54, 67, 5,  54, 75, 4,  54, 91, 4,  55, 52, 3,  55, 67, 5,  55, 75, 4,  55, 91, 4,  56, 55, 5,  56, 91, 4,  57, 55, 5,  57, 91, 4,  58, 55, 5,  58, 91, 4,  59, 60, 4,  60, 60, 4,  61, 60, 4,  62, 60, 4,  255 // End of data marker
};
void displayFrame4() {
display.clearDisplay();
 for (uint16_t i = 0; i < sizeof(frame4); i += 3) {
uint8_t y = pgm_read_byte(&frame4[i]);
if (y == 255) {break;} // End of data marker
uint8_t startX = pgm_read_byte(&frame4[i + 1]);
uint8_t endX = pgm_read_byte(&frame4[i + 2]);
display.drawFastHLine(startX, y, endX, SSD1306_WHITE);
}
display.display(); // Send the buffer to the OLED
}

const uint8_t frame5[] PROGMEM = {
  3, 75, 8,  4, 75, 8,  5, 75, 8,  6, 75, 8,  7, 75, 8,  8, 72, 11,  9, 72, 11,  10, 72, 11,  11, 67, 8,  12, 67, 8,  13, 67, 8,  14, 67, 8,  15, 64, 15,  15, 88, 15,  16, 64, 15,  16, 88, 15,  17, 64, 15,  17, 88, 15,  18, 64, 15,  18, 88, 15,  19, 64, 15,  19, 88, 15,  20, 64, 8,  20, 75, 28,  21, 64, 8,  21, 75, 28,  22, 64, 8,  22, 75, 28,  23, 27, 4,  23, 40, 68,  24, 27, 4,  24, 40, 68,  25, 27, 4,  25, 40, 68,  26, 27, 4,  26, 40, 68,  27, 27, 4,  27, 40, 68,  28, 24, 16,  28, 43, 48,  28, 103, 5,  29, 24, 16,  29, 43, 48,  29, 103, 5,  30, 24, 16,  30, 43, 48,  30, 103, 5,  31, 24, 16,  31, 43, 48,  31, 103, 5,  32, 43, 45,  33, 43, 45,  34, 43, 45,  35, 43, 45,  36, 43, 45,  37, 43, 45,  38, 43, 45,  39, 43, 45,  40, 47, 13,  40, 75, 16,  41, 47, 13,  41, 75, 16,  42, 47, 13,  42, 75, 16,  43, 47, 5,  43, 55, 5,  43, 88, 7,  44, 47, 5,  44, 55, 5,  44, 88, 7,  45, 47, 5,  45, 55, 5,  45, 88, 7,  46, 47, 5,  46, 55, 5,  46, 88, 7,  47, 43, 4,  47, 60, 4,  47, 83, 5,  47, 95, 5,  48, 43, 4,  48, 60, 4,  48, 83, 5,  48, 95, 5,  49, 43, 4,  49, 60, 4,  49, 83, 5,  49, 95, 5,  50, 43, 4,  50, 60, 4,  50, 83, 5,  50, 95, 5,  51, 43, 4,  51, 64, 8,  51, 75, 8,  51, 100, 3,  52, 43, 4,  52, 64, 8,  52, 75, 8,  52, 100, 3,  53, 43, 4,  53, 64, 8,  53, 75, 8,  53, 100, 3,  54, 43, 4,  54, 64, 8,  54, 75, 8,  54, 100, 3,  55, 43, 4,  55, 64, 8,  55, 75, 8,  55, 100, 3,  56, 43, 4,  56, 67, 5,  56, 100, 3,  57, 43, 4,  57, 67, 5,  57, 100, 3,  58, 43, 4,  58, 67, 5,  58, 100, 3,  59, 47, 5,  60, 47, 5,  61, 47, 5,  62, 47, 5,  255 // End of data marker
};
void displayFrame5() {
display.clearDisplay();
 for (uint16_t i = 0; i < sizeof(frame5); i += 3) {
uint8_t y = pgm_read_byte(&frame5[i]);
if (y == 255) {break;} // End of data marker
uint8_t startX = pgm_read_byte(&frame5[i + 1]);
uint8_t endX = pgm_read_byte(&frame5[i + 2]);
display.drawFastHLine(startX, y, endX, SSD1306_WHITE);
}
display.display(); // Send the buffer to the OLED
}

const uint8_t frame6[] PROGMEM = {
  8, 75, 4,  9, 75, 4,  10, 75, 4,  11, 67, 8,  12, 67, 8,  13, 67, 8,  14, 67, 8,  15, 64, 11,  15, 91, 4,  15, 100, 3,  16, 64, 11,  16, 91, 4,  16, 100, 3,  17, 64, 11,  17, 91, 4,  17, 100, 3,  18, 64, 11,  18, 91, 4,  18, 100, 3,  19, 64, 11,  19, 91, 4,  19, 100, 3,  20, 64, 8,  20, 75, 28,  21, 64, 8,  21, 75, 28,  22, 64, 8,  22, 75, 28,  23, 47, 61,  24, 47, 61,  25, 47, 61,  26, 47, 61,  27, 47, 61,  28, 27, 64,  28, 100, 8,  29, 27, 64,  29, 100, 8,  30, 27, 64,  30, 100, 8,  31, 27, 64,  31, 100, 8,  32, 27, 4,  32, 43, 45,  33, 27, 4,  33, 43, 45,  34, 27, 4,  34, 43, 45,  35, 43, 45,  36, 43, 45,  37, 43, 45,  38, 43, 45,  39, 43, 45,  40, 43, 12,  40, 72, 23,  41, 43, 12,  41, 72, 23,  42, 43, 12,  42, 72, 23,  43, 40, 7,  43, 52, 3,  43, 88, 7,  44, 40, 7,  44, 52, 3,  44, 88, 7,  45, 40, 7,  45, 52, 3,  45, 88, 7,  46, 40, 7,  46, 52, 3,  46, 88, 7,  47, 35, 5,  47, 52, 3,  47, 88, 3,  47, 95, 5,  48, 35, 5,  48, 52, 3,  48, 88, 3,  48, 95, 5,  49, 35, 5,  49, 52, 3,  49, 88, 3,  49, 95, 5,  50, 35, 5,  50, 52, 3,  50, 88, 3,  50, 95, 5,  51, 35, 5,  51, 55, 5,  51, 83, 5,  51, 100, 3,  52, 35, 5,  52, 55, 5,  52, 83, 5,  52, 100, 3,  53, 35, 5,  53, 55, 5,  53, 83, 5,  53, 100, 3,  54, 35, 5,  54, 55, 5,  54, 83, 5,  54, 100, 3,  55, 35, 5,  55, 55, 5,  55, 83, 5,  55, 100, 3,  56, 35, 5,  56, 60, 4,  57, 35, 5,  57, 60, 4,  58, 35, 5,  58, 60, 4,  59, 35, 8,  59, 64, 3,  60, 35, 8,  60, 64, 3,  61, 35, 8,  61, 64, 3,  62, 35, 8,  62, 64, 3,  255 // End of data marker
};
void displayFrame6() {
display.clearDisplay();
 for (uint16_t i = 0; i < sizeof(frame6); i += 3) {
uint8_t y = pgm_read_byte(&frame6[i]);
if (y == 255) {break;} // End of data marker
uint8_t startX = pgm_read_byte(&frame6[i + 1]);
uint8_t endX = pgm_read_byte(&frame6[i + 2]);
display.drawFastHLine(startX, y, endX, SSD1306_WHITE);
}
display.display(); // Send the buffer to the OLED
}

const uint8_t frame7[] PROGMEM = {
  3, 75, 4,  4, 75, 4,  5, 75, 4,  6, 75, 4,  7, 75, 4,  8, 72, 7,  9, 72, 7,  10, 72, 7,  11, 67, 8,  12, 67, 8,  13, 67, 8,  14, 67, 8,  15, 64, 15,  15, 91, 9,  16, 64, 15,  16, 91, 9,  17, 64, 15,  17, 91, 9,  18, 64, 15,  18, 91, 9,  19, 64, 15,  19, 91, 9,  20, 64, 8,  20, 79, 29,  21, 64, 8,  21, 79, 29,  22, 64, 8,  22, 79, 29,  23, 67, 41,  24, 67, 41,  25, 67, 41,  26, 67, 41,  27, 67, 41,  28, 27, 68,  28, 103, 5,  29, 27, 68,  29, 103, 5,  30, 27, 68,  30, 103, 5,  31, 27, 68,  31, 103, 5,  32, 24, 7,  32, 40, 51,  32, 108, 4,  33, 24, 7,  33, 40, 51,  33, 108, 4,  34, 24, 7,  34, 40, 51,  34, 108, 4,  35, 40, 48,  36, 40, 48,  37, 40, 48,  38, 40, 48,  39, 40, 48,  40, 40, 15,  40, 72, 23,  41, 40, 15,  41, 72, 23,  42, 40, 15,  42, 72, 23,  43, 35, 8,  43, 47, 8,  43, 88, 3,  43, 95, 5,  44, 35, 8,  44, 47, 8,  44, 88, 3,  44, 95, 5,  45, 35, 8,  45, 47, 8,  45, 88, 3,  45, 95, 5,  46, 35, 8,  46, 47, 8,  46, 88, 3,  46, 95, 5,  47, 35, 5,  47, 47, 5,  47, 91, 9,  48, 35, 5,  48, 47, 5,  48, 91, 9,  49, 35, 5,  49, 47, 5,  49, 91, 9,  50, 35, 5,  50, 47, 5,  50, 91, 9,  51, 31, 4,  51, 47, 5,  51, 95, 5,  52, 31, 4,  52, 47, 5,  52, 95, 5,  53, 31, 4,  53, 47, 5,  53, 95, 5,  54, 31, 4,  54, 47, 5,  54, 95, 5,  55, 31, 4,  55, 47, 5,  55, 95, 5,  56, 27, 4,  56, 47, 5,  56, 91, 4,  56, 100, 3,  57, 27, 4,  57, 47, 5,  57, 91, 4,  57, 100, 3,  58, 27, 4,  58, 47, 5,  58, 91, 4,  58, 100, 3,  59, 31, 4,  59, 52, 8,  59, 103, 5,  60, 31, 4,  60, 52, 8,  60, 103, 5,  61, 31, 4,  61, 52, 8,  61, 103, 5,  62, 31, 4,  62, 52, 8,  62, 103, 5,  255 // End of data marker
};
void displayFrame7() {
display.clearDisplay();
 for (uint16_t i = 0; i < sizeof(frame7); i += 3) {
uint8_t y = pgm_read_byte(&frame7[i]);
if (y == 255) {break;} // End of data marker
uint8_t startX = pgm_read_byte(&frame7[i + 1]);
uint8_t endX = pgm_read_byte(&frame7[i + 2]);
display.drawFastHLine(startX, y, endX, SSD1306_WHITE);
}
display.display(); // Send the buffer to the OLED
}

const uint8_t frame8[] PROGMEM = {
  3, 72, 3,  4, 72, 3,  5, 72, 3,  6, 72, 3,  7, 72, 3,  8, 72, 7,  9, 72, 7,  10, 72, 7,  11, 67, 5,  12, 67, 5,  13, 67, 5,  14, 67, 5,  15, 64, 11,  16, 64, 11,  17, 64, 11,  18, 64, 11,  19, 64, 11,  20, 60, 7,  20, 75, 28,  21, 60, 7,  21, 75, 28,  22, 60, 7,  22, 75, 28,  23, 64, 39,  24, 64, 39,  25, 64, 39,  26, 64, 39,  27, 64, 39,  28, 24, 67,  28, 100, 8,  29, 24, 67,  29, 100, 8,  30, 24, 67,  30, 100, 8,  31, 24, 67,  31, 100, 8,  32, 24, 3,  32, 40, 48,  32, 103, 5,  33, 24, 3,  33, 40, 48,  33, 103, 5,  34, 24, 3,  34, 40, 48,  34, 103, 5,  35, 35, 53,  36, 35, 53,  37, 35, 53,  38, 35, 53,  39, 35, 53,  40, 35, 17,  40, 64, 31,  41, 35, 17,  41, 64, 31,  42, 35, 17,  42, 64, 31,  43, 31, 4,  43, 40, 7,  43, 83, 5,  43, 95, 5,  44, 31, 4,  44, 40, 7,  44, 83, 5,  44, 95, 5,  45, 31, 4,  45, 40, 7,  45, 83, 5,  45, 95, 5,  46, 31, 4,  46, 40, 7,  46, 83, 5,  46, 95, 5,  47, 27, 4,  47, 35, 8,  47, 83, 5,  47, 95, 5,  48, 27, 4,  48, 35, 8,  48, 83, 5,  48, 95, 5,  49, 27, 4,  49, 35, 8,  49, 83, 5,  49, 95, 5,  50, 27, 4,  50, 35, 8,  50, 83, 5,  50, 95, 5,  51, 24, 3,  51, 35, 5,  51, 88, 3,  51, 95, 5,  52, 24, 3,  52, 35, 5,  52, 88, 3,  52, 95, 5,  53, 24, 3,  53, 35, 5,  53, 88, 3,  53, 95, 5,  54, 24, 3,  54, 35, 5,  54, 88, 3,  54, 95, 5,  55, 24, 3,  55, 35, 5,  55, 88, 3,  55, 95, 5,  56, 19, 5,  56, 35, 5,  56, 88, 3,  57, 19, 5,  57, 35, 5,  57, 88, 3,  58, 19, 5,  58, 35, 5,  58, 88, 3,  59, 35, 5,  59, 91, 4,  60, 35, 5,  60, 91, 4,  61, 35, 5,  61, 91, 4,  62, 35, 5,  62, 91, 4,  255 // End of data marker
};
void displayFrame8() {
display.clearDisplay();
 for (uint16_t i = 0; i < sizeof(frame8); i += 3) {
uint8_t y = pgm_read_byte(&frame8[i]);
if (y == 255) {break;} // End of data marker
uint8_t startX = pgm_read_byte(&frame8[i + 1]);
uint8_t endX = pgm_read_byte(&frame8[i + 2]);
display.drawFastHLine(startX, y, endX, SSD1306_WHITE);
}
display.display(); // Send the buffer to the OLED
}

const uint8_t frame9[] PROGMEM = {
  8, 72, 3,  9, 72, 3,  10, 72, 3,  11, 67, 8,  12, 67, 8,  13, 67, 8,  14, 67, 8,  15, 64, 11,  16, 64, 11,  17, 64, 11,  18, 64, 11,  19, 64, 11,  20, 64, 8,  20, 75, 28,  21, 64, 8,  21, 75, 28,  22, 64, 8,  22, 75, 28,  23, 64, 44,  24, 64, 44,  25, 64, 44,  26, 64, 44,  27, 64, 44,  28, 24, 16,  28, 43, 52,  28, 100, 8,  29, 24, 16,  29, 43, 52,  29, 100, 8,  30, 24, 16,  30, 43, 52,  30, 100, 8,  31, 24, 16,  31, 43, 52,  31, 100, 8,  32, 24, 7,  32, 40, 51,  32, 103, 5,  33, 24, 7,  33, 40, 51,  33, 103, 5,  34, 24, 7,  34, 40, 51,  34, 103, 5,  35, 40, 48,  36, 40, 48,  37, 40, 48,  38, 40, 48,  39, 40, 48,  40, 35, 12,  40, 64, 27,  41, 35, 12,  41, 64, 27,  42, 35, 12,  42, 64, 27,  43, 27, 16,  43, 79, 4,  43, 91, 4,  44, 27, 16,  44, 79, 4,  44, 91, 4,  45, 27, 16,  45, 79, 4,  45, 91, 4,  46, 27, 16,  46, 79, 4,  46, 91, 4,  47, 24, 3,  47, 31, 4,  47, 75, 4,  47, 95, 5,  48, 24, 3,  48, 31, 4,  48, 75, 4,  48, 95, 5,  49, 24, 3,  49, 31, 4,  49, 75, 4,  49, 95, 5,  50, 24, 3,  50, 31, 4,  50, 75, 4,  50, 95, 5,  51, 19, 5,  51, 27, 4,  51, 75, 4,  51, 100, 3,  52, 19, 5,  52, 27, 4,  52, 75, 4,  52, 100, 3,  53, 19, 5,  53, 27, 4,  53, 75, 4,  53, 100, 3,  54, 19, 5,  54, 27, 4,  54, 75, 4,  54, 100, 3,  55, 19, 5,  55, 27, 4,  55, 75, 4,  55, 100, 3,  56, 27, 4,  56, 79, 4,  57, 27, 4,  57, 79, 4,  58, 27, 4,  58, 79, 4,  59, 27, 4,  59, 79, 4,  60, 27, 4,  60, 79, 4,  61, 27, 4,  61, 79, 4,  62, 27, 4,  62, 79, 4,  255 // End of data marker
};
void displayFrame9() {
display.clearDisplay();
 for (uint16_t i = 0; i < sizeof(frame9); i += 3) {
uint8_t y = pgm_read_byte(&frame9[i]);
if (y == 255) {break;} // End of data marker
uint8_t startX = pgm_read_byte(&frame9[i + 1]);
uint8_t endX = pgm_read_byte(&frame9[i + 2]);
display.drawFastHLine(startX, y, endX, SSD1306_WHITE);
}
display.display(); // Send the buffer to the OLED
}

const uint8_t frame10[] PROGMEM = {
  8, 72, 7,  9, 72, 7,  10, 72, 7,  11, 72, 3,  12, 72, 3,  13, 72, 3,  14, 72, 3,  15, 67, 8,  16, 67, 8,  17, 67, 8,  18, 67, 8,  19, 67, 8,  20, 64, 8,  20, 75, 8,  20, 88, 15,  21, 64, 8,  21, 75, 8,  21, 88, 15,  22, 64, 8,  22, 75, 8,  22, 88, 15,  23, 24, 3,  23, 64, 44,  24, 24, 3,  24, 64, 44,  25, 24, 3,  25, 64, 44,  26, 24, 3,  26, 64, 44,  27, 24, 3,  27, 64, 44,  28, 24, 16,  28, 43, 65,  29, 24, 16,  29, 43, 65,  30, 24, 16,  30, 43, 65,  31, 24, 16,  31, 43, 65,  32, 40, 51,  32, 100, 8,  33, 40, 51,  33, 100, 8,  34, 40, 51,  34, 100, 8,  35, 40, 48,  35, 103, 5,  36, 40, 48,  36, 103, 5,  37, 40, 48,  37, 103, 5,  38, 40, 48,  38, 103, 5,  39, 40, 48,  39, 103, 5,  40, 35, 12,  40, 60, 28,  41, 35, 12,  41, 60, 28,  42, 35, 12,  42, 60, 28,  43, 27, 13,  43, 75, 8,  43, 88, 3,  44, 27, 13,  44, 75, 8,  44, 88, 3,  45, 27, 13,  45, 75, 8,  45, 88, 3,  46, 27, 13,  46, 75, 8,  46, 88, 3,  47, 19, 8,  47, 31, 4,  47, 75, 4,  47, 91, 4,  48, 19, 8,  48, 31, 4,  48, 75, 4,  48, 91, 4,  49, 19, 8,  49, 31, 4,  49, 75, 4,  49, 91, 4,  50, 19, 8,  50, 31, 4,  50, 75, 4,  50, 91, 4,  51, 27, 4,  51, 75, 4,  51, 95, 5,  52, 27, 4,  52, 75, 4,  52, 95, 5,  53, 27, 4,  53, 75, 4,  53, 95, 5,  54, 27, 4,  54, 75, 4,  54, 95, 5,  55, 27, 4,  55, 75, 4,  55, 95, 5,  56, 24, 3,  56, 75, 4,  56, 100, 8,  57, 24, 3,  57, 75, 4,  57, 100, 8,  58, 24, 3,  58, 75, 4,  58, 100, 8,  59, 79, 4,  60, 79, 4,  61, 79, 4,  62, 79, 4,  255 // End of data marker
};
void displayFrame10() {
display.clearDisplay();
 for (uint16_t i = 0; i < sizeof(frame10); i += 3) {
uint8_t y = pgm_read_byte(&frame10[i]);
if (y == 255) {break;} // End of data marker
uint8_t startX = pgm_read_byte(&frame10[i + 1]);
uint8_t endX = pgm_read_byte(&frame10[i + 2]);
display.drawFastHLine(startX, y, endX, SSD1306_WHITE);
}
display.display(); // Send the buffer to the OLED
}

const uint8_t frame11[] PROGMEM = {
  3, 75, 4,  4, 75, 4,  5, 75, 4,  6, 75, 4,  7, 75, 4,  8, 75, 8,  9, 75, 8,  10, 75, 8,  11, 72, 7,  12, 72, 7,  13, 72, 7,  14, 72, 7,  15, 67, 16,  16, 67, 16,  17, 67, 16,  18, 67, 16,  19, 67, 16,  20, 64, 11,  20, 79, 24,  21, 64, 11,  21, 79, 24,  22, 64, 11,  22, 79, 24,  23, 24, 3,  23, 67, 41,  24, 24, 3,  24, 67, 41,  25, 24, 3,  25, 67, 41,  26, 24, 3,  26, 67, 41,  27, 24, 3,  27, 67, 41,  28, 24, 16,  28, 43, 48,  28, 95, 13,  29, 24, 16,  29, 43, 48,  29, 95, 13,  30, 24, 16,  30, 43, 48,  30, 95, 13,  31, 24, 16,  31, 43, 48,  31, 95, 13,  32, 24, 3,  32, 31, 4,  32, 40, 48,  32, 100, 8,  33, 24, 3,  33, 31, 4,  33, 40, 48,  33, 100, 8,  34, 24, 3,  34, 31, 4,  34, 40, 48,  34, 100, 8,  35, 40, 48,  35, 103, 5,  36, 40, 48,  36, 103, 5,  37, 40, 48,  37, 103, 5,  38, 40, 48,  38, 103, 5,  39, 40, 48,  39, 103, 5,  40, 31, 21,  40, 60, 28,  41, 31, 21,  41, 60, 28,  42, 31, 21,  42, 60, 28,  43, 31, 16,  43, 72, 3,  43, 83, 8,  44, 31, 16,  44, 72, 3,  44, 83, 8,  45, 31, 16,  45, 72, 3,  45, 83, 8,  46, 31, 16,  46, 72, 3,  46, 83, 8,  47, 27, 8,  47, 67, 5,  47, 88, 3,  48, 27, 8,  48, 67, 5,  48, 88, 3,  49, 27, 8,  49, 67, 5,  49, 88, 3,  50, 27, 8,  50, 67, 5,  50, 88, 3,  51, 19, 12,  51, 64, 3,  51, 91, 4,  52, 19, 12,  52, 64, 3,  52, 91, 4,  53, 19, 12,  53, 64, 3,  53, 91, 4,  54, 19, 12,  54, 64, 3,  54, 91, 4,  55, 19, 12,  55, 64, 3,  55, 91, 4,  56, 24, 3,  56, 60, 4,  56, 95, 5,  57, 24, 3,  57, 60, 4,  57, 95, 5,  58, 24, 3,  58, 60, 4,  58, 95, 5,  59, 60, 4,  59, 100, 3,  60, 60, 4,  60, 100, 3,  61, 60, 4,  61, 100, 3,  62, 60, 4,  62, 100, 3,  255 // End of data marker
};
void displayFrame11() {
display.clearDisplay();
 for (uint16_t i = 0; i < sizeof(frame11); i += 3) {
uint8_t y = pgm_read_byte(&frame11[i]);
if (y == 255) {break;} // End of data marker
uint8_t startX = pgm_read_byte(&frame11[i + 1]);
uint8_t endX = pgm_read_byte(&frame11[i + 2]);
display.drawFastHLine(startX, y, endX, SSD1306_WHITE);
}
display.display(); // Send the buffer to the OLED
}

const uint8_t frame12[] PROGMEM = {
  3, 72, 3,  4, 72, 3,  5, 72, 3,  6, 72, 3,  7, 72, 3,  8, 67, 8,  9, 67, 8,  10, 67, 8,  11, 64, 8,  12, 64, 8,  13, 64, 8,  14, 64, 8,  15, 60, 15,  15, 83, 17,  16, 60, 15,  16, 83, 17,  17, 60, 15,  17, 83, 17,  18, 60, 15,  18, 83, 17,  19, 60, 15,  19, 83, 17,  20, 60, 7,  20, 75, 28,  21, 60, 7,  21, 75, 28,  22, 60, 7,  22, 75, 28,  23, 24, 3,  23, 35, 73,  24, 24, 3,  24, 35, 73,  25, 24, 3,  25, 35, 73,  26, 24, 3,  26, 35, 73,  27, 24, 3,  27, 35, 73,  28, 19, 16,  28, 40, 51,  28, 100, 8,  29, 19, 16,  29, 40, 51,  29, 100, 8,  30, 19, 16,  30, 40, 51,  30, 100, 8,  31, 19, 16,  31, 40, 51,  31, 100, 8,  32, 24, 3,  32, 40, 48,  33, 24, 3,  33, 40, 48,  34, 24, 3,  34, 40, 48,  35, 40, 12,  35, 55, 33,  36, 40, 12,  36, 55, 33,  37, 40, 12,  37, 55, 33,  38, 40, 12,  38, 55, 33,  39, 40, 12,  39, 55, 33,  40, 27, 20,  40, 72, 11,  41, 27, 20,  41, 72, 11,  42, 27, 20,  42, 72, 11,  43, 16, 3,  43, 24, 3,  43, 31, 4,  43, 67, 5,  43, 79, 4,  44, 16, 3,  44, 24, 3,  44, 31, 4,  44, 67, 5,  44, 79, 4,  45, 16, 3,  45, 24, 3,  45, 31, 4,  45, 67, 5,  45, 79, 4,  46, 16, 3,  46, 24, 3,  46, 31, 4,  46, 67, 5,  46, 79, 4,  47, 19, 5,  47, 31, 4,  47, 64, 3,  47, 79, 4,  48, 19, 5,  48, 31, 4,  48, 64, 3,  48, 79, 4,  49, 19, 5,  49, 31, 4,  49, 64, 3,  49, 79, 4,  50, 19, 5,  50, 31, 4,  50, 64, 3,  50, 79, 4,  51, 27, 4,  51, 55, 9,  51, 79, 4,  52, 27, 4,  52, 55, 9,  52, 79, 4,  53, 27, 4,  53, 55, 9,  53, 79, 4,  54, 27, 4,  54, 55, 9,  54, 79, 4,  55, 27, 4,  55, 55, 9,  55, 79, 4,  56, 79, 4,  57, 79, 4,  58, 79, 4,  59, 83, 5,  60, 83, 5,  61, 83, 5,  62, 83, 5,  255 // End of data marker
};
void displayFrame12() {
display.clearDisplay();
 for (uint16_t i = 0; i < sizeof(frame12); i += 3) {
uint8_t y = pgm_read_byte(&frame12[i]);
if (y == 255) {break;} // End of data marker
uint8_t startX = pgm_read_byte(&frame12[i + 1]);
uint8_t endX = pgm_read_byte(&frame12[i + 2]);
display.drawFastHLine(startX, y, endX, SSD1306_WHITE);
}
display.display(); // Send the buffer to the OLED
}

const uint8_t frame13[] PROGMEM = {
  3, 75, 4,  4, 75, 4,  5, 75, 4,  6, 75, 4,  7, 75, 4,  8, 75, 8,  9, 75, 8,  10, 75, 8,  11, 67, 8,  12, 67, 8,  13, 67, 8,  14, 67, 8,  15, 64, 15,  15, 91, 4,  15, 100, 3,  16, 64, 15,  16, 91, 4,  16, 100, 3,  17, 64, 15,  17, 91, 4,  17, 100, 3,  18, 64, 15,  18, 91, 4,  18, 100, 3,  19, 64, 15,  19, 91, 4,  19, 100, 3,  20, 64, 8,  20, 75, 33,  21, 64, 8,  21, 75, 33,  22, 64, 8,  22, 75, 33,  23, 43, 65,  24, 43, 65,  25, 43, 65,  26, 43, 65,  27, 43, 65,  28, 27, 68,  28, 103, 9,  29, 27, 68,  29, 103, 9,  30, 27, 68,  30, 103, 9,  31, 27, 68,  31, 103, 9,  32, 27, 8,  32, 43, 48,  33, 27, 8,  33, 43, 48,  34, 27, 8,  34, 43, 48,  35, 43, 12,  35, 60, 28,  36, 43, 12,  36, 60, 28,  37, 43, 12,  37, 60, 28,  38, 43, 12,  38, 60, 28,  39, 43, 12,  39, 60, 28,  40, 31, 21,  40, 67, 16,  41, 31, 21,  41, 67, 16,  42, 31, 21,  42, 67, 16,  43, 27, 4,  43, 35, 5,  43, 72, 7,  44, 27, 4,  44, 35, 5,  44, 72, 7,  45, 27, 4,  45, 35, 5,  45, 72, 7,  46, 27, 4,  46, 35, 5,  46, 72, 7,  47, 27, 4,  47, 40, 3,  47, 55, 5,  47, 67, 5,  47, 75, 4,  48, 27, 4,  48, 40, 3,  48, 55, 5,  48, 67, 5,  48, 75, 4,  49, 27, 4,  49, 40, 3,  49, 55, 5,  49, 67, 5,  49, 75, 4,  50, 27, 4,  50, 40, 3,  50, 55, 5,  50, 67, 5,  50, 75, 4,  51, 24, 3,  51, 40, 3,  51, 60, 7,  51, 75, 4,  52, 24, 3,  52, 40, 3,  52, 60, 7,  52, 75, 4,  53, 24, 3,  53, 40, 3,  53, 60, 7,  53, 75, 4,  54, 24, 3,  54, 40, 3,  54, 60, 7,  54, 75, 4,  55, 24, 3,  55, 40, 3,  55, 60, 7,  55, 75, 4,  56, 75, 4,  57, 75, 4,  58, 75, 4,  59, 79, 4,  60, 79, 4,  61, 79, 4,  62, 79, 4,  255 // End of data marker
};
void displayFrame13() {
display.clearDisplay();
 for (uint16_t i = 0; i < sizeof(frame13); i += 3) {
uint8_t y = pgm_read_byte(&frame13[i]);
if (y == 255) {break;} // End of data marker
uint8_t startX = pgm_read_byte(&frame13[i + 1]);
uint8_t endX = pgm_read_byte(&frame13[i + 2]);
display.drawFastHLine(startX, y, endX, SSD1306_WHITE);
}
display.display(); // Send the buffer to the OLED
}

const uint8_t frame14[] PROGMEM = {
  8, 72, 7,  9, 72, 7,  10, 72, 7,  11, 67, 12,  12, 67, 12,  13, 67, 12,  14, 67, 12,  15, 64, 11,  15, 95, 5,  16, 64, 11,  16, 95, 5,  17, 64, 11,  17, 95, 5,  18, 64, 11,  18, 95, 5,  19, 64, 11,  19, 95, 5,  20, 64, 8,  20, 75, 4,  20, 83, 20,  21, 64, 8,  21, 75, 4,  21, 83, 20,  22, 64, 8,  22, 75, 4,  22, 83, 20,  23, 43, 12,  23, 64, 44,  24, 43, 12,  24, 64, 44,  25, 43, 12,  25, 64, 44,  26, 43, 12,  26, 64, 44,  27, 43, 12,  27, 64, 44,  28, 31, 60,  28, 100, 8,  29, 31, 60,  29, 100, 8,  30, 31, 60,  30, 100, 8,  31, 31, 60,  31, 100, 8,  32, 24, 64,  33, 24, 64,  34, 24, 64,  35, 24, 3,  35, 40, 7,  35, 52, 31,  36, 24, 3,  36, 40, 7,  36, 52, 31,  37, 24, 3,  37, 40, 7,  37, 52, 31,  38, 24, 3,  38, 40, 7,  38, 52, 31,  39, 24, 3,  39, 40, 7,  39, 52, 31,  40, 31, 21,  40, 64, 19,  41, 31, 21,  41, 64, 19,  42, 31, 21,  42, 64, 19,  43, 31, 4,  43, 40, 3,  43, 55, 5,  43, 72, 3,  44, 31, 4,  44, 40, 3,  44, 55, 5,  44, 72, 3,  45, 31, 4,  45, 40, 3,  45, 55, 5,  45, 72, 3,  46, 31, 4,  46, 40, 3,  46, 55, 5,  46, 72, 3,  47, 31, 4,  47, 43, 4,  47, 60, 4,  47, 67, 8,  48, 31, 4,  48, 43, 4,  48, 60, 4,  48, 67, 8,  49, 31, 4,  49, 43, 4,  49, 60, 4,  49, 67, 8,  50, 31, 4,  50, 43, 4,  50, 60, 4,  50, 67, 8,  51, 31, 4,  51, 47, 5,  51, 64, 8,  52, 31, 4,  52, 47, 5,  52, 64, 8,  53, 31, 4,  53, 47, 5,  53, 64, 8,  54, 31, 4,  54, 47, 5,  54, 64, 8,  55, 31, 4,  55, 47, 5,  55, 64, 8,  56, 27, 4,  56, 43, 4,  56, 64, 3,  57, 27, 4,  57, 43, 4,  57, 64, 3,  58, 27, 4,  58, 43, 4,  58, 64, 3,  59, 64, 8,  60, 64, 8,  61, 64, 8,  62, 64, 8,  255 // End of data marker
};
void displayFrame14() {
display.clearDisplay();
 for (uint16_t i = 0; i < sizeof(frame14); i += 3) {
uint8_t y = pgm_read_byte(&frame14[i]);
if (y == 255) {break;} // End of data marker
uint8_t startX = pgm_read_byte(&frame14[i + 1]);
uint8_t endX = pgm_read_byte(&frame14[i + 2]);
display.drawFastHLine(startX, y, endX, SSD1306_WHITE);
}
display.display(); // Send the buffer to the OLED
}

void (*functionArray[])() = {displayFrame0,displayFrame1,displayFrame2,displayFrame3,displayFrame4,displayFrame5,displayFrame6,displayFrame7,displayFrame8,displayFrame9,displayFrame10,displayFrame11,displayFrame12,displayFrame13,displayFrame14,};

int totalFrames = 15;
